{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","cores","tema","setTema","useState","React","createElement","className","style","background","onClick","i","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0LAqFeA,MAjFf,WACE,MAAMC,EAAQ,CACZ,QACA,8CACA,OACA,6DACA,MACA,2DACA,QACA,gEACA,SACA,4DACA,SACA,kEACA,OACA,+CACA,SACA,iEACA,OACA,4DACA,QACA,gEACA,OACA,8DACA,QACA,iDACA,OACA,8DACA,SACA,kEACA,QACA,iEACA,OACA,8DACA,QACA,gEACA,SACA,kEACA,SACA,kEACA,QACA,gEACA,SACA,kEACA,OACA,8DACA,aACA,uEACA,OACA,8DAGA,yCACA,2CACA,wCACA,kDACA,sCACA,0CACA,gDACA,+CACA,oDACA,4CACA,8CACA,2CACA,2CAEKC,EAAMC,GAASC,mBAAS,GAM/B,OACEC,IAAAC,cAAA,OAAKC,UAAU,QAAQC,MAAO,CAACC,WAAWR,EAAMC,KAC9CG,IAAAC,cAAA,UAAI,sBACLD,IAAAC,cAAA,UAAQI,QAPX,WACEP,EAASQ,IAAKA,EAAE,GAAKV,EAAMW,UAMI,kBCnEpBC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzB,IAAAC,cAACD,IAAM0B,WAAU,KACf1B,IAAAC,cAACN,EAAG,QAORa","file":"static/js/main.49993785.chunk.js","sourcesContent":["import React from \"react\";\nimport './App.css';\nimport { useState } from \"react\";\n\nfunction App() {\n  const cores = [\n    'white', \n    'radial-gradient(circle, white 1%, blue 90%)',\n    'blue', \n    'radial-gradient(circle, white 3%, blue 40%, darkblue 100%)',\n    'red', \n    'radial-gradient(circle, white 5%, red 50%, darkred 100%)',\n    'green', \n    'radial-gradient(circle, white 10%, green 50%, darkgreen 100%)',\n    'yellow', \n    'radial-gradient(circle, white 20%, yellow 70%, gold 100%)',\n    'purple', \n    'radial-gradient(circle, white 10%, purple 60%, darkpurple 100%)',\n    'gray', \n    'radial-gradient(circle, white 5%, gray 100%)',\n    'orange', \n    'radial-gradient(circle, white 5%, orange 40%, darkorange 100%)',\n    'pink', \n    'radial-gradient(circle, white 5%, pink 50%, hotpink 100%)',\n    'brown', \n    'radial-gradient(circle, white 10%, brown 70%, darkbrown 100%)',\n    'cyan', \n    'radial-gradient(circle, white 15%, cyan 60%, darkcyan 100%)',\n    'black', \n    'radial-gradient(circle, white 20%, black 100%)',\n    'teal', \n    'radial-gradient(circle, white 10%, teal 60%, darkteal 100%)',\n    'violet', \n    'radial-gradient(circle, white 10%, violet 50%, darkviolet 100%)',\n    'beige', \n    'radial-gradient(circle, white 10%, beige 50%, lightbrown 100%)',\n    'navy', \n    'radial-gradient(circle, white 10%, navy 50%, darknavy 100%)',\n    'olive', \n    'radial-gradient(circle, white 20%, olive 70%, darkolive 100%)',\n    'indigo', \n    'radial-gradient(circle, white 10%, indigo 50%, darkindigo 100%)',\n    'maroon', \n    'radial-gradient(circle, white 10%, maroon 60%, darkmaroon 100%)',\n    'khaki', \n    'radial-gradient(circle, white 10%, khaki 50%, darkkhaki 100%)',\n    'silver', \n    'radial-gradient(circle, white 10%, silver 60%, darksilver 100%)',\n    'gold', \n    'radial-gradient(circle, white 20%, gold 60%, darkgold 100%)',\n    'chartreuse', \n    'radial-gradient(circle, white 10%, chartreuse 50%, greenyellow 100%)',\n    'plum', \n    'radial-gradient(circle, white 10%, plum 50%, darkplum 100%)',\n    \n    // Linear gradients\n    'linear-gradient(to right, red, yellow)', \n    'linear-gradient(to bottom, blue, purple)',\n    'linear-gradient(to top, pink, orange)',\n    'linear-gradient(to right, cyan, white, magenta)', \n    'linear-gradient(45deg, blue, green)', \n    'linear-gradient(to bottom, black, gray)', \n    'linear-gradient(to left, gold, darkgoldenrod)', \n    'linear-gradient(to top left, purple, violet)', \n    'linear-gradient(to bottom right, teal, lightblue)', \n    'linear-gradient(to top, silver, darkgray)',\n    'linear-gradient(to right, brown, darkbrown)',\n    'linear-gradient(45deg, chartreuse, lime)', \n    'linear-gradient(135deg, hotpink, pink)'\n  ];\n  const [tema, setTema]=useState(0);\n  \n  function alterarTema(){\n    setTema((i)=>(i+1) % cores.length);\n  }\n\n  return (\n    <div className=\"geral\" style={{background:cores[tema]}}>\n      <h1>Escolha Seu Estilo</h1>\n     <button onClick={alterarTema}>ðŸ”€</button>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}